{"version":3,"sources":["navbar.js","BlogList.js","useFetch.js","Home.js","create.js","BlogDetails.js","App.js","index.js"],"names":["Navbar","React","createElement","className","Link","to","BlogList","_ref","blogs","title","handleDelete","map","blog","key","id","author","useFetch","url","data","setData","useState","isPending","setIsPending","error","setError","useEffect","setTimeout","fetch","then","res","ok","json","Error","catch","err","message","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","console","log","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","handleClick","Maheer","Router","Switch","Route","exact","path","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.2b627f35.chunk.js","sourcesContent":["import {Link}from 'react-router-dom';\nimport React from \"react\";\nconst Navbar = () => {\n    return ( \n        <nav className=\"navbar\">\n            <h1>MaheersBlog</h1>\n            <div className=\"links\">\n                <Link to =\"/\">Home</Link>\n                <Link to=\"/create\">TechUp</Link>\n                <Link to=\"/view\">New Blog</Link>\n            </div>\n        </nav>\n     );\n}\n \nexport default Navbar;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst BlogList = ({blogs, title, handleDelete}) => {\n    \n    \n    return (  \n        <div className=\"blog-list\">\n            <h2>{title}</h2>\n             {blogs.map((blog) => (\n                <div className=\"blog-preview\" key={blog.id}>\n                 <Link to= {`/blogs/${blog.id}`}>\n                    <h2> {blog.title}</h2>\n                    <p> Written by { blog.author }</p>\n                </Link>\n                    \n                    </div>\n       \n        ))}\n        </div>\n     );\n}   \n \nexport default BlogList;","\nimport {useState, useEffect } from 'react';\n\n \n\nconst useFetch= (url)=> {\n    const [data, setData]= useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n \n    useEffect(()=> {\n        setTimeout(()=>{\n        fetch(url)\n        .then(res => {\n            if(!res.ok){\n               throw Error('could  not fetch the data for that resource but fuck that'); \n            } else{\n            return res.json();\n            }\n        })\n        .then(data=>{\n            setData(data);\n            setIsPending(false);\n            setError(null);\n        })\n        .catch(err =>{\n            setIsPending(false);\n            setError(err.message);\n    \n        })\n    },  1000);\n    },[url]);\n\n    return {data, isPending, error}\n}\n\nexport default useFetch; ","import React from 'react';\nimport BlogList from './BlogList';\nimport useFetch from  './useFetch';\n \nconst Home = () => {\n  const {data:blogs, isPending, error} =useFetch ('http://localhost:8000/blogs'); \n\n\n\n\n\n\n return(\n    <div className = \"home\">\n        <h2>Home Page</h2>\n        { isPending && <div>loading...</div>}\n        {blogs &&<BlogList blogs={blogs} title=\"All blogs!\"/>}\n        \n        \n     </div>\n    \n );\n\n }\n    \nexport default Home;  ","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Create = () => {\n    const [title, setTitle] =useState ('');\n    const [body, setBody] =useState ('');\n    const [author, setAuthor]=useState('Maheer');\n    const [isPending, setIsPending]= useState (false);\n    const history =useHistory();\n\n\n\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        const blog ={title, body, author };\n\n        setIsPending(true);\n        \n        fetch('http://localhost:8000/blogs',{\n            method:'POST',\n            headers:{\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(blog)\n        }).then(()=>{\n            console.log('new blog added');\n            setIsPending(false);\n            //history.go(-1);\n            history.push('/');\n        })\n            \n       \n\n    }\n\n    return ( \n        <div className = \"create\">\n            <h2>Add a new blog</h2>\n            <form onSubmit={handleSubmit} >\n                <label>Log in Data:</label>\n                <input\n                type=\"text\" required\n                value={ title}\n                onChange={(e) => setTitle(e.target.value)}\n                ></input>\n                <label>Blog Body:</label>\n                <textarea required\n                value= {body}\n                onChange={(e)=> setBody(e.target.value)}></textarea>\n                <label> Blog Author</label>\n                <select\n                value={author}\n                onChange={(e) => setAuthor(e.target.value)}\n                >\n                    <option value=\"Maheer\">Maheer</option>\n                    <option value=\"Mahmud\">Mahmud</option>\n                </select>\n                {!isPending && <button>Add Blog</button>}\n                {isPending && <button disabled>Adding Blog...</button>}\n                <p>{title}</p>\n                <p>{body}</p>\n                <p>{author}</p>\n                \n\n            </form>\n        </div>\n     );\n}\n \nexport default Create;","import React from 'react';\nimport  {useHistory, useParams} from \"react-router-dom\";\nimport useFetch from './useFetch';\n\nconst BlogDetails = () => {\n    const {id}= useParams();\n    const {data:blog, error, isPending} =useFetch('h'+id);\n    const history =useHistory();\n\n    const handleClick=()=> {\n        fetch('http://localhost:8000/blogs/'+ blog.id,{\n           method: 'DELETE' \n        }).then(() =>{\n            history.push('/');\n        })\n    }\n    return (  \n        <div className=\"BlogDetails\">\n            {isPending && <div>loading ... </div>}\n            {error && <div> {error} </div>}\n            {blog && (\n                <article>\n                    <h2>{blog.title}</h2>\n                    <p> Written by {blog.author}</p>\n                    <div> {blog.body}</div>\n                    <button onClick={handleClick}>delete</button>\n                </article>\n            )}\n        </div>\n    );\n}\n \nexport default BlogDetails;","import React from 'react';\nimport Navbar from './navbar';\nimport Home from './Home';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Create from './create';\nimport BlogDetails from './BlogDetails';\n\n\nfunction Maheer() {\n  const title ='GIST-UP'\nreturn (\n    <Router>\n     <div className=\"App\">\n      <Navbar/>\n      <div className=\"content\"> \n        <h1>{title}</h1>\n        <Switch>\n          <Route  exact path=\"/\">\n            <Home/>\n          </Route>\n          <Route path=\"/create\">\n            <Create/>\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <BlogDetails/>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n   </Router>\n  );\n}\n\nexport default Maheer;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}